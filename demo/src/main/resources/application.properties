spring.application.name=Tuki-FoodStore
# Nombre de la aplicación (opcional, útil para logs, Actuator, etc.)

# Driver JDBC que usará Spring Boot para conectarse a PostgreSQL
spring.datasource.driver-class-name=org.postgresql.Driver

# Dialecto de Hibernate que indica cómo generar SQL compatible con PostgreSQL
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Estrategia de generación de tablas:
# - update: actualiza la estructura sin borrar datos
# - create-drop: crea y elimina al cerrar
# - validate: verifica que coincida con el modelo
spring.jpa.hibernate.ddl-auto=update

# Muestra las consultas SQL generadas por Hibernate en la consola (útil para depurar)
spring.jpa.show-sql=true

# Tipo de base de datos: PostgreSQL en este caso
# Sigue esta estructura:
# jdbc:postgresql://<host>:<puerto>/<nombre_base>
spring.datasource.url=jdbc:postgresql://localhost:5432/Tuki-FoodStore


# Usuario de la base de datos
spring.datasource.username=postgres


# Contraseña del usuario de la base de datos
spring.datasource.password=lucas


# ? Configuración de JWT
jwt.secret=mi_clave_super_secreta_12345678901234567890
jwt.expiration=3600000
